buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.avast.gradle:gradle-docker-compose-plugin:$gradleDockerComposeVersion"
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'docker-compose'

dependencies {
    implementation project(":banking-api")
    implementation project(":banking-command")
    implementation project(":banking-query")

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation platform("org.axonframework:axon-bom:$axonVersion")
    implementation 'org.axonframework:axon-spring-boot-starter'

    testImplementation platform("org.spockframework:spock-bom:$spockVersion")
    testImplementation "org.spockframework:spock-core"
    testImplementation "org.spockframework:spock-spring"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'org.axonframework:axon-test'
    testImplementation "org.awaitility:awaitility:$awaitilityVersion"
}

dockerCompose.isRequiredBy(test)
dockerCompose.stopContainers = false // switch to 'false' for quick iteration during development

test.doFirst {
    // expose dockerized Axon server's port to Spring configuration
    environment "AXON_PORT", dockerCompose.servicesInfos['axon-server'].tcpPorts[8124]
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
